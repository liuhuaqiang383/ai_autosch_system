# Generated by Django 4.2.7 on 2025-03-15 11:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('basic_data', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SchedulingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=36, verbose_name='任务ID')),
                ('task_type', models.CharField(max_length=20, verbose_name='任务类型')),
                ('status', models.CharField(max_length=20, verbose_name='状态')),
                ('progress', models.IntegerField(default=0, verbose_name='进度')),
                ('message', models.TextField(blank=True, null=True, verbose_name='消息')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '排课任务日志',
                'verbose_name_plural': '排课任务日志',
                'db_table': 'scheduling_log',
            },
        ),
        migrations.CreateModel(
            name='SchedulingStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy_name', models.CharField(max_length=100, verbose_name='策略名称')),
                ('description', models.TextField(blank=True, null=True, verbose_name='策略描述')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否默认策略')),
                ('teacher_weight', models.IntegerField(default=5, verbose_name='教师权重')),
                ('classroom_weight', models.IntegerField(default=5, verbose_name='教室权重')),
                ('class_weight', models.IntegerField(default=5, verbose_name='班级权重')),
                ('avoid_teacher_conflict', models.BooleanField(default=True, verbose_name='避免教师冲突')),
                ('avoid_classroom_conflict', models.BooleanField(default=True, verbose_name='避免教室冲突')),
                ('avoid_class_conflict', models.BooleanField(default=True, verbose_name='避免班级冲突')),
                ('prefer_teacher_continuous', models.BooleanField(default=False, verbose_name='教师连续上课偏好')),
                ('prefer_class_continuous', models.BooleanField(default=False, verbose_name='班级连续上课偏好')),
                ('max_daily_hours_teacher', models.IntegerField(default=8, verbose_name='教师每日最大课时')),
                ('max_daily_hours_class', models.IntegerField(default=10, verbose_name='班级每日最大课时')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '排课策略',
                'verbose_name_plural': '排课策略',
                'db_table': 'scheduling_strategy',
            },
        ),
        migrations.CreateModel(
            name='SchedulingTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(blank=True, max_length=20, null=True, verbose_name='学年学期')),
                ('course_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='课程名称')),
                ('teacher_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='任课教师')),
                ('class_composition', models.TextField(blank=True, null=True, verbose_name='教学班组成')),
                ('teaching_class_code', models.CharField(max_length=50, unique=True, verbose_name='教学班编号')),
                ('course_affiliation', models.CharField(blank=True, max_length=100, null=True, verbose_name='课程归属')),
                ('course_credits', models.CharField(blank=True, max_length=10, null=True, verbose_name='课程学分')),
                ('teaching_class_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='教学班名称')),
                ('hour_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='学时类型')),
                ('course_hours', models.IntegerField(blank=True, null=True, verbose_name='开课学时')),
                ('scheduling_hours', models.IntegerField(blank=True, null=True, verbose_name='排课学时')),
                ('total_hours', models.IntegerField(blank=True, null=True, verbose_name='总学时')),
                ('scheduling_priority', models.IntegerField(blank=True, null=True, verbose_name='排课优先级')),
                ('class_size', models.IntegerField(blank=True, null=True, verbose_name='教学班人数')),
                ('course_nature', models.CharField(blank=True, max_length=50, null=True, verbose_name='课程性质')),
                ('campus', models.CharField(blank=True, max_length=50, null=True, verbose_name='开课校区')),
                ('is_external', models.BooleanField(default=False, verbose_name='是否外聘')),
                ('weekly_hours', models.CharField(blank=True, max_length=50, null=True, verbose_name='开课周次学时')),
                ('consecutive_periods', models.IntegerField(blank=True, null=True, verbose_name='连排节次')),
                ('classroom_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='指定教室类型')),
                ('specified_time', models.CharField(blank=True, max_length=100, null=True, verbose_name='指定时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('course_code', models.ForeignKey(db_column='course_code', on_delete=django.db.models.deletion.CASCADE, to='basic_data.courseinfo', to_field='course_code', verbose_name='课程编号')),
                ('department', models.ForeignKey(db_column='department', on_delete=django.db.models.deletion.CASCADE, to='basic_data.departmentinfo', to_field='department_code', verbose_name='开课院系')),
                ('specified_building', models.ForeignKey(blank=True, db_column='specified_building', null=True, on_delete=django.db.models.deletion.SET_NULL, to='basic_data.buildinginfo', to_field='building_code', verbose_name='指定教学楼')),
                ('specified_classroom', models.ForeignKey(blank=True, db_column='specified_classroom', null=True, on_delete=django.db.models.deletion.SET_NULL, to='basic_data.classroominfo', to_field='classroom_code', verbose_name='指定教室')),
                ('teacher_code', models.ForeignKey(db_column='teacher_code', on_delete=django.db.models.deletion.CASCADE, to='basic_data.teacherinfo', to_field='teacher_code', verbose_name='教师工号')),
            ],
            options={
                'verbose_name': '排课任务',
                'verbose_name_plural': '排课任务',
                'db_table': 'scheduling_task',
            },
        ),
        migrations.CreateModel(
            name='SchedulingResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(blank=True, max_length=20, null=True, verbose_name='学年学期')),
                ('course_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='课程名称')),
                ('teacher_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='任课教师')),
                ('teaching_class_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='教学班名称')),
                ('classroom_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='教室名称')),
                ('day_of_week', models.IntegerField(blank=True, null=True, verbose_name='星期几')),
                ('start_section', models.IntegerField(blank=True, null=True, verbose_name='开始节次')),
                ('end_section', models.IntegerField(blank=True, null=True, verbose_name='结束节次')),
                ('week_list', models.CharField(blank=True, max_length=100, null=True, verbose_name='周次列表')),
                ('is_fixed', models.BooleanField(default=False, verbose_name='是否固定')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('classroom_code', models.ForeignKey(db_column='classroom_code', on_delete=django.db.models.deletion.CASCADE, to='basic_data.classroominfo', to_field='classroom_code', verbose_name='教室编号')),
                ('course_code', models.ForeignKey(db_column='course_code', on_delete=django.db.models.deletion.CASCADE, to='basic_data.courseinfo', to_field='course_code', verbose_name='课程编号')),
                ('task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='scheduling.schedulingtask', verbose_name='排课任务ID')),
                ('teacher_code', models.ForeignKey(db_column='teacher_code', on_delete=django.db.models.deletion.CASCADE, to='basic_data.teacherinfo', to_field='teacher_code', verbose_name='教师工号')),
                ('teaching_class_code', models.ForeignKey(db_column='teaching_class_code', on_delete=django.db.models.deletion.CASCADE, related_name='results', to='scheduling.schedulingtask', to_field='teaching_class_code', verbose_name='教学班编号')),
            ],
            options={
                'verbose_name': '排课结果',
                'verbose_name_plural': '排课结果',
                'db_table': 'scheduling_result',
            },
        ),
        migrations.CreateModel(
            name='TeachingClassComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_code', models.ForeignKey(db_column='class_code', on_delete=django.db.models.deletion.CASCADE, to='basic_data.classinfo', to_field='class_code', verbose_name='班级编号')),
                ('teaching_class_code', models.ForeignKey(db_column='teaching_class_code', on_delete=django.db.models.deletion.CASCADE, to='scheduling.schedulingtask', to_field='teaching_class_code', verbose_name='教学班编号')),
            ],
            options={
                'verbose_name': '教学班组成',
                'verbose_name_plural': '教学班组成',
                'db_table': 'teaching_class_composition',
                'unique_together': {('teaching_class_code', 'class_code')},
            },
        ),
    ]
